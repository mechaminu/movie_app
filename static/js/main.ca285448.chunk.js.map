{"version":3,"sources":["components/Movie.js","routes/Home.js","routes/OldHome.js","routes/About.js","components/Navigation.js","App.js","index.js"],"names":["Movie","title","year","image","genre","summary","rating","className","src","alt","map","e","idx","key","str","console","log","Math","round","i","slice","RatingStar","length","Home","state","count","isLoading","movies","getMovies","a","Axios","get","data","setState","this","id","title_english","medium_cover_image","genres","React","Component","DummyMovie","name","movieList","OldHome","About","props","Navigation","to","icon","faFilm","size","color","class","App","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ca285448.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Movie.css\"\r\n\r\nfunction Movie({title, year, image, genre, summary, rating}) {\r\n    return <div className=\"movie\">\r\n        <img className=\"movie_image\" src={image} alt={title} title={title}></img>\r\n        <div className=\"movie_info\">\r\n            <div className=\"movie_title\">{title}</div>\r\n            <div className=\"movie_year\">{year}</div>\r\n            <div className=\"movie_genre\"><ul>{genre.map((e, idx)=><li key={idx}>{e}</li>)}</ul></div>\r\n            <div className=\"movie_rating\">\r\n                {RatingStar(rating)}\r\n            </div>\r\n        </div>\r\n        <div className=\"movie_summary\">{summary.length > 200 ? summary.slice(0,200)+\"...\" : summary}</div>\r\n    </div>\r\n}\r\n\r\nfunction RatingStar(rating) {\r\n    let str=\"\"\r\n    console.log(Math.round(rating/10*5))\r\n    for (let i = Math.round(rating/10*5); i > 0; i--) {\r\n        str = str + \"★\";\r\n    }\r\n    str = str + \"☆☆☆☆☆\";\r\n    console.log(str);\r\n    return str.slice(0,5)+\" (\"+rating+\")\";\r\n}\r\n\r\nMovie.propTypes = {\r\n    title:PropTypes.string.isRequired,\r\n    year:PropTypes.number.isRequired,\r\n    image:PropTypes.string.isRequired,\r\n    genre:PropTypes.arrayOf(PropTypes.string).isRequired,\r\n    summary:PropTypes.string.isRequired,\r\n    rating:PropTypes.number.isRequired\r\n}\r\n\r\nexport default Movie","import React from \"react\";\r\nimport Axios from \"axios\";\r\nimport Movie from \"../components/Movie\";\r\nimport './Home.css';\r\n\r\n\r\nclass Home extends React.Component {\r\n\r\n    // constructor(p) {\r\n    //     super(p);\r\n    //     console.log(\"Hello, world!\");\r\n    // }\r\n\r\n    // 바뀌는 데이터를 담는 그릇, State\r\n    // Class형 component가 아니더라도 React Hook로 인해서 state 관리가 가능해졌다. (심화)\r\n    state = {   // elements can be defined in setState\r\n        count: 0,\r\n        isLoading: true,\r\n        movies: []\r\n    };\r\n\r\n    /** Component Lifecycle Call stack\r\n     *  - mounting\r\n     *      constructor\r\n     *      render\r\n     *      componentDidMount\r\n     *  - updating\r\n     *      render\r\n     *      componentDidUpdate\r\n     *  - unmounting\r\n     *      componentWillUnmount\r\n     */\r\n    componentDidMount() {\r\n        console.log(\"rendered\");\r\n        this.getMovies();\r\n    }\r\n\r\n    getMovies = async () => {\r\n        const { data: {data: { movies }}} = await Axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\");\r\n        this.setState(({isLoading:false,movies}));\r\n    }\r\n\r\n    // React re-render page for every setState execution\r\n    componentDidUpdate() {\r\n        console.log(\"updated\");\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        console.log(\"Goodbye, cruel world...!\")\r\n    }\r\n\r\n    // React는 자동적으로 Class component의 render 메소드를 실행한다!\r\n    render() {\r\n        console.log(\"rendering\");\r\n        return <div>\r\n            <section className=\"container\">\r\n                { this.state.isLoading\r\n                    ? <div className=\"loader\">Loading...</div>\r\n                    : <div className=\"movies\">\r\n                        {this.state.movies.map(e => (\r\n                            <Movie \r\n                                key={e.id}\r\n                                title={e.title_english}\r\n                                year={e.year}\r\n                                image={e.medium_cover_image}\r\n                                rating={e.rating}\r\n                                genre={e.genres}\r\n                                summary={e.summary}\r\n                            />\r\n                        ))}\r\n                    </div>\r\n                }\r\n            </section>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default Home","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction OldHome() {\n  return (\n    <div className=\"App\">\n      <div>\n        {/** This is how to comment */}\n        <h1>Hello world!!!!</h1>\n        <p>컴포넌트는 (JSX로 쓰여진) HTML을 반환하는 함수!</p>\n      </div>\n      \n      <div>\n        {/** Component and properties \n         * For 'Movie' components, we created property 'name' and pass values like 'aboutTime'.\n         * this is how information is transferred into components, like how its done in HTML elements\n        */}\n        <DummyMovie name=\"aboutTime\" />\n        <DummyMovie name=\"parasite\" />\n        <DummyMovie name=\"django\" />\n      </div>\n\n      <div>\n        {/** Dynamic component generation and map function */}\n        <h1>크리스토퍼 놀란 걸작선</h1>\n        {movieList.map((e, idx) => <Movie key={idx} name={e.name} image={e.image} rating={e.rating} />)}\n      </div>\n      \n    </div>\n  );\n\n}\n\n// Component and properties\nfunction DummyMovie({ name }) {\n  return <div>\n    <p>Title : {name}</p>\n  </div>\n}\n\nfunction Movie({ name, image, rating }) {\n  return <div className=\"movieElem\">\n    <p>Title : {name} / Rating : {rating}</p>\n    <p><img src={image} alt={name + \"_poster\"} /></p>\n  </div>\n}\n\n// Argument type validation\nMovie.propTypes = {\n  // Movie.myTypes = {  // PropTypes element만 제대로 갖추기만 하면 상위 객체의 이름은 상관 없이 OK\n  name: PropTypes.string.isRequired,\n  image: PropTypes.string.isRequired,\n  rating:PropTypes.number.isRequired\n  // rating: PropTypes.string.isRequired // error!\n  // rating:PropTypes.number // \n};\n\n\n// Dynamic component generation and map function\nconst movieList = [\n  {\n    name: \"Tenet\",\n    image: \"https://m.media-amazon.com/images/M/MV5BYzg0NGM2NjAtNmIxOC00MDJmLTg5ZmYtYzM0MTE4NWE2NzlhXkEyXkFqcGdeQXVyMTA4NjE0NjEy._V1_SY1000_CR0,0,666,1000_AL_.jpg\",\n    rating: 10\n  },\n  {\n    name: \"Interstella\",\n    image: \"https://m.media-amazon.com/images/M/MV5BZjdkOTU3MDktN2IxOS00OGEyLWFmMjktY2FiMmZkNWIyODZiXkEyXkFqcGdeQXVyMTMxODk2OTU@._V1_SY1000_SX675_AL_.jpg\",\n    rating: 9\n  },\n  {\n    name: \"The Dark Knight\",\n    image: \"https://m.media-amazon.com/images/M/MV5BMTMxNTMwODM0NF5BMl5BanBnXkFtZTcwODAyMTk2Mw@@._V1_SY1000_CR0,0,675,1000_AL_.jpg\",\n    rating: 8\n  },\n  {\n    name: \"Memento\",\n    image: \"https://m.media-amazon.com/images/M/MV5BZTcyNjk1MjgtOWI3Mi00YzQwLWI5MTktMzY4ZmI2NDAyNzYzXkEyXkFqcGdeQXVyNjU0OTQ0OTY@._V1_SY1000_CR0,0,681,1000_AL_.jpg\",\n    rating: 7\n  }\n];\n\nexport default OldHome;\n","import React from \"react\";\r\nimport \"./About.css\"\r\n\r\nfunction About(props) {\r\n    console.log(props)\r\n    return <div className=\"container\">\r\n            <div className=\"aboutWrapper\">\r\n                <div className=\"about\">I love movies!</div>\r\n            </div>\r\n        </div>\r\n}\r\n\r\nexport default About;","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { faFilm } from \"@fortawesome/free-solid-svg-icons\";\r\nimport './Navigation.css'\r\n\r\nfunction Navigation() {\r\n    return <div className=\"navigation\">\r\n        <Link to=\"/\"><div className=\"logo_area\"><FontAwesomeIcon className=\"logo\" icon={faFilm} size=\"3x\" color=\"gray\"/><span class=\"logoText\">CinemaList</span></div></Link>\r\n        <div className=\"menu_area\">\r\n            <Link to=\"/old\">Old Home</Link>\r\n            <Link to=\"/about\">About</Link>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\nimport Home from './routes/Home'\nimport OldHome from './routes/OldHome'\nimport About from './routes/About'\nimport Navigation from './components/Navigation'\n\n\n// Router 종류에서 BrowserRouter를 사용할 수 있지만, Github.io deploy가 번거로워진다.\n// HashRouter는 tag를 사용하여, url에 #/가 추가되는 단점이 있지만 보다 단순하다.\nfunction App() {\n  return <HashRouter>\n          <Navigation />\n          <Route path=\"/\" exact={true} component={Home} />\n          <Route path=\"/old\" component={OldHome} />\n          <Route path=\"/about\" component={About} />\n        </HashRouter>\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />,document.getElementById('root'));"],"sourceRoot":""}